{"version":3,"sources":["components/app-header/index.js","components/app-header/header.js","components/app-table-head/index.js","components/app-table-head/app-table-head.js","components/app-table-body/index.js","components/app-table-body/app-table-body.js","components/app-table/index.js","components/app-table/table.js","components/app-form/index.js","components/app-form/app-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","TableHead","head","title","map","scope","key","TableBody","state","this","props","peoples","onChangeHours","onChangeRate","cells","el","index","id","firstName","lastName","hours","rate","total","type","className","placeholder","value","onChange","target","React","Component","Table","AppForm","onChangeHandler","setState","isEmptyValue","val","handleSubmit","e","preventDefault","Object","values","some","alert","onAddNewPerson","onSubmit","htmlFor","App","count","change","arr","num","propName","parseNum","parseFloat","findIndex","newPerson","slice","person","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6205b9a.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <h3>Employees table</h3>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import TableHead from './app-table-head';\r\n\r\nexport default TableHead;\r\n","import React from 'react';\r\n\r\nimport './app-table-head.css';\r\n\r\nconst TableHead = () => {\r\n\r\n  const headers = [\r\n    { title: '#' },\r\n    { title: 'First name' },\r\n    { title: 'Last name' },\r\n    { title: 'Hours' },\r\n    { title: 'Rate' },\r\n    { title: 'Total' },\r\n  ];\r\n\r\n  const head = headers.map(({title}) => {\r\n    return(\r\n      <th\r\n        scope=\"col\"\r\n        key={title}\r\n      >\r\n        {title}\r\n      </th>\r\n    )\r\n  });\r\n\r\n  return(\r\n    <thead>\r\n      <tr>\r\n        {head}\r\n      </tr>\r\n    </thead>\r\n  )\r\n};\r\n\r\nexport default TableHead;\r\n","import TableBody from './app-table-body';\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\n\r\nimport './app-table-body.css';\r\n\r\nclass TableBody extends React.Component {\r\n\r\n  state = {};\r\n\r\n  render() {\r\n\r\n    const { peoples, onChangeHours, onChangeRate } = this.props;\r\n\r\n    const cells = peoples.map((el, index) => {\r\n      const { id, firstName, lastName, hours, rate, total } = el;\r\n\r\n      return (\r\n        <tr key={ id }>\r\n          <th>{ ++index }</th>\r\n          <td>{ firstName }</td>\r\n          <td>{ lastName }</td>\r\n          <td>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder={ hours }\r\n              value={ hours }\r\n              onChange={ ({ target }) => onChangeHours(id, target.value) }\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              value={ rate }\r\n              placeholder={ rate }\r\n              onChange={ ({ target }) => onChangeRate(id, target.value) }\r\n            />\r\n          </td>\r\n          <td>{ total }</td>\r\n        </tr>\r\n      )\r\n    });\r\n\r\n\r\n    return (\r\n      <tbody>\r\n      { cells }\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import Table from './table';\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport TableHead from '../app-table-head';\r\nimport TableBody from '../app-table-body';\r\n\r\nimport './table.css';\r\n\r\nclass Table extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { peoples, onChangeHours, onChangeRate } = this.props;\r\n\r\n    return (\r\n      <table className=\"table table-striped\">\r\n        <TableHead/>\r\n\r\n        <TableBody\r\n          peoples={ peoples }\r\n          onChangeHours={ onChangeHours }\r\n          onChangeRate={ onChangeRate }\r\n        />\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import AppForm from './app-form';\r\n\r\nexport default AppForm;\r\n","import React from 'react';\r\n\r\nimport './app-form.css';\r\n\r\nclass AppForm extends React.Component {\r\n\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    hours: '',\r\n    rate: ''\r\n  };\r\n\r\n  onChangeHandler = ({ target }) => {\r\n    this.setState({\r\n      [target.id]: target.value\r\n    });\r\n  };\r\n\r\n  isEmptyValue = val => val === '';\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const values = Object.values(this.state);\r\n\r\n    if(values.some(this.isEmptyValue)) {\r\n      alert('You must fill in all fields');\r\n      return;\r\n    }\r\n\r\n    this.props.onAddNewPerson(this.state);\r\n\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      hours: '',\r\n      rate: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-row\"\r\n        onSubmit={ this.handleSubmit }\r\n      >\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"firstName\">First name</label>\r\n          <input\r\n            id=\"firstName\"\r\n            type=\"text\"\r\n            value={ this.state.firstName }\r\n            className=\"form-control\"\r\n            placeholder=\"Enter first name\"\r\n            onChange={ this.onChangeHandler }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"lastName\">Last name</label>\r\n          <input\r\n            id=\"lastName\"\r\n            value={ this.state.lastName }\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter last name\"\r\n            onChange={ this.onChangeHandler }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"hours\">Hours</label>\r\n          <input\r\n            id=\"hours\"\r\n            type=\"number\"\r\n            value={ this.state.hours }\r\n            className=\"form-control\"\r\n            placeholder=\"Enter hours\"\r\n            onChange={ this.onChangeHandler }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"rate\">Rate</label>\r\n          <input\r\n            id=\"rate\"\r\n            type=\"number\"\r\n            value={ this.state.rate }\r\n            className=\"form-control\"\r\n            placeholder=\"Enter rate\"\r\n            onChange={ this.onChangeHandler }\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success btn-lg btn-block\">Add new person</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppForm;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport Header from '../app-header';\r\nimport Table from '../app-table';\r\nimport AppForm from '../app-form';\r\n\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    peoples: [\r\n      { id: 1, firstName: 'Ivan', lastName: 'Ivanov', hours: 10, rate: 100, total: 1000 },\r\n      { id: 2, firstName: 'Petya', lastName: 'Petrov', hours: 3, rate: 10, total: 30 },\r\n      { id: 3, firstName: 'John', lastName: 'Week', hours: 100, rate: 100, total: 10000 }\r\n    ]\r\n  };\r\n\r\n  count = 100;\r\n\r\n  change = (arr, id, num, propName) => {\r\n    const parseNum = parseFloat(num) || 0;\r\n\r\n    if (parseNum < 0) return arr;\r\n\r\n    const index = arr.findIndex((el) => el.id === id);\r\n    const oldPerson = arr[index];\r\n\r\n    let newPerson = {\r\n      ...oldPerson, [propName]: parseNum,\r\n    };\r\n\r\n    newPerson.total = newPerson.rate * newPerson.hours;\r\n\r\n    const newPeoples = [\r\n      ...arr.slice(0, index),\r\n      newPerson,\r\n      ...arr.slice(index + 1),\r\n    ];\r\n\r\n    return newPeoples;\r\n  };\r\n\r\n  onChangeHours = (id, num) => {\r\n    this.setState(({ peoples }) => {\r\n      return {\r\n        peoples: this.change(peoples, id, num, 'hours')\r\n      }\r\n    });\r\n  };\r\n\r\n  onChangeRate = (id, num) => {\r\n    this.setState(({ peoples }) => {\r\n      return {\r\n        peoples: this.change(peoples, id, num, 'rate')\r\n      }\r\n    });\r\n  };\r\n\r\n  onAddNewPerson = (person) => {\r\n    this.setState(({ peoples }) => {\r\n      const newPerson = {\r\n        id: ++this.count,\r\n        ...person\r\n      };\r\n\r\n      newPerson.total = newPerson.rate * newPerson.hours;\r\n\r\n      const newPeoples = [\r\n        ...peoples,\r\n        newPerson\r\n      ];\r\n\r\n      return {\r\n        peoples: newPeoples\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { peoples } = this.state;\r\n\r\n    return (\r\n      <div className=\"app-wrap\">\r\n        <Header/>\r\n\r\n        <Table\r\n          peoples={ peoples }\r\n          onChangeHours={ this.onChangeHours }\r\n          onChangeRate={ this.onChangeRate }\r\n        />\r\n\r\n        <AppForm onAddNewPerson={ this.onAddNewPerson }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDom.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}