{"version":3,"sources":["components/Header/index.ts","components/Header/Header.tsx","components/SearchForm/index.ts","components/SearchForm/SearchForm.tsx","components/Spinner/index.ts","components/Spinner/Spinner.tsx","components/ListItem/index.ts","components/ListItem/ListItem.tsx","components/List/index.ts","components/List/List.tsx","services/movie-service.js","components/App/index.ts","components/App/App.tsx","index.tsx"],"names":["Header","className","type","SearchForm","state","value","onSubmitHandler","e","preventDefault","props","onSearchHandler","setState","onChangeSubmit","event","target","onSubmit","this","placeholder","onChange","Component","Spinner","ListItem","Poster","Title","Type","Year","src","alt","List","movies","items","map","item","key","imdbID","MovieService","getAllMovies","name","a","getResource","url","fetch","res","ok","Error","status","json","App","movieService","title","newTitle","IAppState","oldState","then","Search","ReactDOM","render","document","getElementById"],"mappings":"8TAEeA,ECAA,WACb,OACE,6BACE,yBAAKC,UAAU,8BAAf,OAGE,yBAAKA,UAAU,aACb,4BAAQC,KAAK,SAASD,UAAU,kBAAhC,aACA,4BAAQC,KAAK,SAASD,UAAU,kBAAhC,kBCRKE,E,2MCYbC,MAAQ,CACNC,MAAO,I,EAGTC,gBAAkB,SAACC,GACjBA,EAAEC,iBAEF,EAAKC,MAAMC,gBAAgB,EAAKN,MAAMC,OAEtC,EAAKM,SAAS,CACZN,MAAO,M,EAIXO,eAAiB,SAACC,GAChB,EAAKF,SAAS,CACZN,MAAOQ,EAAMC,OAAOT,S,wEAKtB,OACE,0BACEU,SAAUC,KAAKV,iBAEf,yBAAKL,UAAU,cACb,2BACEC,KAAK,OACLD,UAAU,eACVgB,YAAY,oBACZZ,MAAOW,KAAKZ,MAAMC,MAClBa,SAAUF,KAAKJ,kBAGnB,yBAAKX,UAAU,cACb,4BACEC,KAAK,SACLD,UAAU,0BAFZ,qB,GArCekB,aCVVC,G,MCEC,WACd,OACE,yBAAKnB,UAAU,UAAf,gBCJWoB,G,YCUuB,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAC3D,OACE,wBACExB,UAAU,oBAEV,yBAAKA,UAAU,QACb,yBAAKyB,IAAKJ,EAAQK,IAAKJ,IACvB,yBAAKtB,UAAU,aACb,wBAAIA,UAAU,cAAcsB,GAC5B,uBAAGtB,UAAU,aAAb,iBAAoCuB,IACpC,uBAAGvB,UAAU,aAAb,iBAAoCwB,IACpC,4BAAQxB,UAAU,gBAAlB,aCrBK2B,ECee,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAE9B,IAAIA,EACF,OAAO,kBAAC,EAAD,MAGT,IAAMC,EAAQD,EAAOE,KAAI,SAACC,GACxB,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAKE,OACVA,OAAQF,EAAKE,OACbZ,OAAQU,EAAKV,OACbC,MAAOS,EAAKT,MACZC,KAAMQ,EAAKR,KACXC,KAAMO,EAAKP,UAIjB,OACE,6BACE,wBAAIxB,UAAU,QACX6B,K,uBCxBMK,E,4DALbC,a,uCAAe,WAAOC,GAAP,SAAAC,EAAA,sEACA,EAAKC,YAAL,kCAA4CF,EAA5C,qBADA,mF,uJARGG,G,uFACEC,MAAMD,G,WAAlBE,E,QACEC,G,sBACA,IAAIC,MAAJ,oBAAuBJ,EAAvB,oBAAsCE,EAAIG,S,uBAErCH,EAAII,O,iJCJNC,G,iNCuBbC,aAAe,IAAIb,E,EAEnB/B,MAAQ,CACNyB,OAAQ,GACRoB,MAAO,I,EAcTvC,gBAA4B,SAACwC,GAC3B,EAAKvC,SAAS,CACZsC,MAAOC,K,kFAbQC,EAAsBC,GAAsB,IAAD,OACxDA,EAASH,QAAUjC,KAAKZ,MAAM6C,OAElCjC,KAAKgC,aAAaZ,aAAapB,KAAKZ,MAAM6C,OACvCI,MAAK,SAACxB,GACL,EAAKlB,SAAS,CACZkB,OAAQA,EAAOyB,c,+BAYrB,OACE,6BACE,kBAAC,EAAD,MAEA,0BAAMrD,UAAU,QACd,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAYS,gBAAiBM,KAAKN,mBAGpC,yBAAKT,UAAU,wBACb,kBAAC,EAAD,CAAM4B,OAAQb,KAAKZ,MAAMyB,gB,GApCnBV,cCpBlBoC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.ed155501.chunk.js","sourcesContent":["import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark bg-info\">\r\n        LOGO\r\n\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn btn-danger\">main page</button>\r\n          <button type=\"button\" className=\"btn btn-danger\">my library</button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import SearchForm from './SearchForm';\r\n\r\nexport default SearchForm;\r\n","import React, {Component} from 'react';\r\nimport {IHandler} from '../App/App';\r\n\r\n\r\ninterface HandleNameChangeInterface {\r\n  target: HTMLInputElement;\r\n}\r\n\r\ninterface AddFormI {\r\n  onSearchHandler: IHandler\r\n}\r\n\r\nclass SearchForm extends Component<AddFormI> {\r\n\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  onSubmitHandler = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSearchHandler(this.state.value);\r\n\r\n    this.setState({\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  onChangeSubmit = (event: HandleNameChangeInterface) => {\r\n    this.setState({\r\n      value: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.onSubmitHandler}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter movie title\"\r\n            value={this.state.value}\r\n            onChange={this.onChangeSubmit}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-info\"\r\n          >\r\n            Search film\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      Loading...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import ListItem from './ListItem';\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\n\r\nimport './ListItem.css';\r\n\r\ninterface IListItem {\r\n  imdbID: string\r\n  Poster: string\r\n  Title: string\r\n  Type: string\r\n  Year: string\r\n}\r\n\r\nconst ListItem: React.FC<IListItem> = ({Poster, Title, Type, Year}) => {\r\n  return (\r\n    <li\r\n      className=\"list__item col-3\"\r\n    >\r\n      <div className=\"card\">\r\n        <img src={Poster} alt={Title}/>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{Title}</h5>\r\n          <p className=\"card-text\">{`type - ${Type}`}</p>\r\n          <p className=\"card-text\">{`year - ${Year}`}</p>\r\n          <button className=\"btn btn-info\">info</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import List from './List';\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport Spinner from '../Spinner';\r\n\r\nimport './List.css';\r\nimport ListItem from '../ListItem';\r\n\r\n\r\ninterface IList {\r\n  movies: Array<{\r\n    imdbID: string\r\n    Poster: string\r\n    Title: string\r\n    Type: string\r\n    Year: string\r\n  }>\r\n}\r\n\r\nconst List: React.FC<IList> = ({movies}) => {\r\n\r\n  if(!movies) {\r\n    return <Spinner/>\r\n  }\r\n\r\n  const items = movies.map((item) => {\r\n    return (\r\n      <ListItem\r\n        key={item.imdbID}\r\n        imdbID={item.imdbID}\r\n        Poster={item.Poster}\r\n        Title={item.Title}\r\n        Type={item.Type}\r\n        Year={item.Year}/>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"list\">\r\n        {items}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","class MovieService {\r\n  async getResource(url) {\r\n    const res = await fetch(url);\r\n    if(!res.ok) {\r\n      throw new Error(`Not fetch ${url}, status ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n\r\n  getAllMovies = async (name) => {\r\n    return await this.getResource(`https://omdbapi.com//?s=${name}&apikey=5b411c37`);\r\n  }\r\n}\r\n\r\nexport default MovieService;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport Header from '../Header';\r\nimport SearchForm from '../SearchForm';\r\nimport List from '../List';\r\nimport MovieService from '../../services/movie-service';\r\n\r\nimport './App.css';\r\n\r\ninterface IMoviesItem {\r\n  imdbID: string\r\n  Poster: string\r\n  Title: string\r\n  Type: string\r\n  Year: string\r\n}\r\n\r\ninterface IAppState {\r\n  movies: Array<IMoviesItem>\r\n  title: string\r\n}\r\n\r\nexport type IHandler = (newTitle: string) => void;\r\n\r\n\r\nclass App extends Component<{}, IAppState, IHandler> {\r\n  movieService = new MovieService();\r\n\r\n  state = {\r\n    movies: [],\r\n    title: ''\r\n  };\r\n\r\n  componentDidUpdate(IAppState: IAppState, oldState: IAppState) {\r\n    if (oldState.title === this.state.title) return;\r\n\r\n    this.movieService.getAllMovies(this.state.title)\r\n      .then((movies) => {\r\n        this.setState({\r\n          movies: movies.Search\r\n        })\r\n      });\r\n  }\r\n\r\n  onSearchHandler: IHandler = (newTitle) => {\r\n    this.setState({\r\n      title: newTitle\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <main className=\"main\">\r\n          <div className=\"container mt-5\">\r\n            <SearchForm onSearchHandler={this.onSearchHandler}/>\r\n          </div>\r\n\r\n          <div className=\"container-fluid mt-5\">\r\n            <List movies={this.state.movies}/>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}